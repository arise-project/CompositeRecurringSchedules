# Research for solution.

# # Requirements

If I can found all types of {value} and begin and end of every sentence then I probably have solution.
Results for types list can be present in filled class fields or with map [string, object].
Defined fileds with types can be configured with json.

# # # Fowler recomendations

1) Main idea to idel alhoritm is writing it from scratch.

2) Utilize code from import "text/template/parse" 
through dynamic wrapping or revriting a code or preprocessig 
and pre analyse to find appropriate struct to extract.extract
This method may be quick implementation byt it should be 
compared to algoritm from scratch.

3) Third mwthod will be more elegant. Idea in learning perseprton 
to fill fields from one stuct instead of mulltiple will be 
very possible. Also should be compared by performanse with other methods.

Algorithm namings : Scratch, Parse, Propagation

# # Scratch

# # Parse

# # Propagation

#Architecture

Scheduler API defines the interfaces for your request routing and request/reply handlers.
Scheduler Core for manages the lifecycle (loading, starting, and stopping) of your service and defines a powerful module system for adding functionality.functionality.
Scheduler HTTP SERVICE It incorporates both Scheduler-api and Scheduler-core.

#Fileds

recurence filed :  one time|every
numeric filed : {#} - used in context
time span filed : seconds|minutes|hours|days|weeks|months|years|date|weekday|weekend|days of week
date filed : date format
time filed : time format
action filed : ... would be good if you could save that as a 'schedule' object and then make rules that stack.. like

Templates

In the text/template package, there are two significant new features to make writing templates easier.

First, it is now possible to trim spaces around template actions, which can make template definitions more readable. A minus sign at the beginning of an action says to trim space before the action, and a minus sign at the end of an action says to trim space after the action. For example, the template

{{23 -}}
   <
{{- 45}}
formats as 23<45.

Second, the new {{block}} action, combined with allowing redefinition of named templates, provides a simple way to define pieces of a template that can be replaced in different instantiations. For example, the template

<title>{{block "title"}}Page Title{{end}}</title>
<body>
<h1>{{template "title"}}</h1>
{{block "page"}}Main text{{end}}
defines the basic formatting of a web page. A program can then overlay that template with new definitions for the "title" and "page" blocks to reuse the formatting for another page.
